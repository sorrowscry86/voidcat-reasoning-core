# Add these to your requirements.txt or install manually:
# slowapi>=0.1.7

from slowapi import Limiter, _rate_limit_exceeded_handler
from slowapi.util import get_remote_address
from slowapi.errors import RateLimitExceeded

# Initialize rate limiter
limiter = Limiter(key_func=get_remote_address)

# Add to your FastAPI app initialization
app = FastAPI(
    # existing parameters...
    # ...
)

app.state.limiter = limiter
app.add_exception_handler(RateLimitExceeded, _rate_limit_exceeded_handler)

# Then modify your endpoint to include rate limiting
@app.post(
    "/query",
    response_model=QueryResponse,
    status_code=status.HTTP_200_OK,
    # other decorators...
)
@limiter.limit("10/minute")  # Adjust rate as needed
async def process_query(request: Request, query_request: QueryRequest) -> QueryResponse:
    # existing implementation
    # ...
