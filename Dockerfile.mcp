# ============================================================================
# VoidCat Reasoning Core - MCP Server Docker Container
# ============================================================================
# Optimized for Model Context Protocol (MCP) server deployment
# Eliminates Windows compatibility issues and provides clean environment
# ============================================================================

FROM python:3.11-slim

# Set working directory
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    ca-certificates \
    git \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Upgrade pip
RUN pip install --upgrade pip

# Copy requirements and install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir --disable-pip-version-check -r requirements.txt

# Create non-root user for security
RUN useradd --create-home --shell /bin/bash voidcat

# Copy application code
COPY --chown=voidcat:voidcat . .

# Create necessary directories
RUN mkdir -p /app/.agentic-tools-mcp /app/indexes /app/knowledge_source && \
    chown -R voidcat:voidcat /app/.agentic-tools-mcp /app/indexes /app/knowledge_source

# Switch to non-root user
USER voidcat

# Set environment variables for MCP server
ENV VOIDCAT_DEBUG=true
ENV VOIDCAT_DOCKER=true
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1

# Health check for MCP server
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD python -c "import sys; sys.exit(0)" || exit 1

# Create entrypoint script for MCP server
COPY --chown=voidcat:voidcat docker-entrypoint.sh /app/
RUN chmod +x /app/docker-entrypoint.sh

# Set entrypoint and default command for MCP server
ENTRYPOINT ["/app/docker-entrypoint.sh"]
CMD ["python", "-u", "mcp_server.py"]
